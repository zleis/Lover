<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lover.dao.PTypeDao">
    <!-- type指定的是对应的实体类 -->
    <resultMap type="com.lover.entity.PType" id="pTypeMap">
        <!-- id用来配置表的主键与类的属性的映射关系 ,column指定的是表的字段名； property指定的是类的属性名-->
        <id column="pid" property="pid"/>
        <!-- result用来配置 普通字段与类的属性的映射关系 ,column指定的是表的字段名； property指定的是类的属性名-->
        <result column="name" property="name"/>
        <result column="ctime" property="ctime" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
    </resultMap>
    
    <select id="getPTypeList" resultType="com.lover.entity.PType">
        SELECT * FROM ptype order by pid
    </select>

    <select id="ptypeFind" parameterType="Integer" resultMap="pTypeMap">
        select * from ptype where pid = #{pid, jdbcType = INTEGER}
    </select>

    <insert id="ptypeAdd" parameterType="com.lover.entity.PType">
        INSERT INTO ptype (name, ctime) value (#{name, jdbcType = VARCHAR}, #{ctime, jdbcType = TIMESTAMP})
    </insert>

    <delete id="ptypeDel" parameterType="com.lover.entity.PType">
        delete from ptype where pid = #{pid, jdbcType = INTEGER}
    </delete>

    <update id="ptypeEdit" parameterType="com.lover.entity.PType">
        update ptype set name = #{name, jdbcType = VARCHAR} where pid = #{pid, jdbcType = INTEGER}
    </update>
</mapper>